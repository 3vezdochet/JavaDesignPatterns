package introduction.exceptions;

/**
 * Исключение — некая исключительная, незапланированная ситуация, которая произошла при работе программы.
 *
 * Название класса-исключения обычно коротко отображает причину его возникновения:
 *  - FileNotFoundException (файл не найден)
 *  - ArithmeticException (исключение при выполнении математической операции)
 *  - ArrayIndexOutOfBoundsException (указан номер ячейки массива за пределами его длины).
 *
 * Например, если попытаться вывести в консоль ячейку array[23] для массива array длиной 10.
 * Всего таких классов в Java почти 400 штук! Зачем так много? Именно для того, чтобы программистам было удобнее с ними работать.
 */
public class ExceptionExample {
    public static void main(String[] args) {
        /**
         * Для работы с исключениями в Java существуют специальные блоки кода: try, catch и finally.
         *
         * Код, в котором программист ожидает возникновения исключений, помещается в блок try. Это не значит,
         * что исключение в этом месте обязательно произойдет. Это значит, что оно может там произойти,
         * и программист в курсе этого.
         *
         * Тип ошибки, который ты ожидаешь получить, помещается в блок catch (“перехват”). Сюда же помещается весь код,
         * который нужно выполнить, если исключение произойдет.
         */
        try {
            System.out.println("Делим число на ноль");
            System.out.println(366/0);//в этой строчке кода будет выброшено исключение

            System.out.println("Этот");
            System.out.println("код");
            System.out.println("не");
            System.out.println("будет");
            System.out.println("выполнен!");

        } catch (ArithmeticException e) {
            System.err.println("Программа перепрыгнула в блок catch!");
            System.err.println("Ошибка! Нельзя делить на ноль!");

            e.printStackTrace();
        }
    }
}
